{"remainingRequest":"D:\\Program\\_WebProject\\zhaoxi_portal_ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Program\\_WebProject\\zhaoxi_portal_ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Program\\_WebProject\\zhaoxi_portal_ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Program\\_WebProject\\zhaoxi_portal_ui\\src\\views\\Person.vue?vue&type=template&id=45bdfb8f&scoped=true&","dependencies":[{"path":"D:\\Program\\_WebProject\\zhaoxi_portal_ui\\src\\views\\Person.vue","mtime":1608580408304},{"path":"D:\\Program\\_WebProject\\zhaoxi_portal_ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1607570881520},{"path":"D:\\Program\\_WebProject\\zhaoxi_portal_ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1607570888615},{"path":"D:\\Program\\_WebProject\\zhaoxi_portal_ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1607570881520},{"path":"D:\\Program\\_WebProject\\zhaoxi_portal_ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1607570888615}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}